@page "/"
@using CurrieTechnologies.Razor.Clipboard
@using EasyIdentityGenerator.Data.Models
@inject ClipboardService Clipboard
@inject IJSRuntime JSRuntime

<h1>Easy Identity Generator</h1>

<AppInfoPrompt @bind-Value="GeneratedUser" Title="You need a fast way to generate an ASP.NET Identity user to access your app in developement? Then" />

<div class="form-group">
    <div>
        <input @bind="GeneratedUser.Password" type="text" class="form-control" placeholder="Password" readonly="readonly" />
        <button @onclick="(async e => await Clipboard.WriteTextAsync(GeneratedUser.Password))">Copy to Clipboard</button>
    </div>
    <div>
        <input @bind="GeneratedUser.PasswordHash" type="text" class="form-control" placeholder="Password Hash" readonly="readonly" />
        <button @onclick="(async e => await Clipboard.WriteTextAsync(GeneratedUser.PasswordHash))">Copy to Clipboard</button>
    </div>
</div>

<div class="row">
    <div class="col-4">
        <div class="list-group" id="myList" role="tablist">
            <a class="list-group-item list-group-item-action active" data-toggle="list" href="#home" role="tab">Home</a>
            <a class="list-group-item list-group-item-action" data-toggle="list" href="#profile" role="tab">Profile</a>
            <a class="list-group-item list-group-item-action" data-toggle="list" href="#messages" role="tab">Messages</a>
            <a class="list-group-item list-group-item-action" data-toggle="list" href="#settings" role="tab">Settings</a>
        </div>
    </div>
    <div class="col-8">
        <div class="tab-content">
            <div class="tab-pane active" id="home" role="tabpanel">...</div>
            <div class="tab-pane" id="profile" role="tabpanel">...</div>
            <div class="tab-pane" id="messages" role="tabpanel">...</div>
            <div class="tab-pane" id="settings" role="tabpanel">...</div>
        </div>
    </div>
</div>

@code
{
    ApplicationUser GeneratedUser = new ApplicationUser();
    //protected async void CallJSMethod()
    //{
    //    await JSRuntime.InvokeAsync<bool>("JSMethod", null);
    //}
}